>>> print_square = __import__('4-print_square').print_square


Write a function that prints a square with the character #.

Prototype: def print_square(size):
size is the size length of the square


Happy path:

>>> print_square(4)
####
####
####
####


>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

>>> print_square(1)
#

size must be an integer
otherwise raise a TypeError exception with the message
size must be an integer

if size is a float and is less than 0
raise a TypeError exception with the message
size must be an integer

>>> print_square("")
Traceback (most recent call last):
TypeError: size must be an integer

>>> print_square(3.0)
Traceback (most recent call last):
TypeError: size must be an integer

>>> print_square(3.5)
Traceback (most recent call last):
TypeError: size must be an integer

>>> print_square(-2.0)
Traceback (most recent call last):
TypeError: size must be an integer

>>> print_square(-3.34)
Traceback (most recent call last):
TypeError: size must be an integer


if size is less than 0
raise a ValueError exception with the message
size must be >= 0

>>> print_square(0)

>>> print_square(-1)
Traceback (most recent call last):
ValueError: size must be >= 0
