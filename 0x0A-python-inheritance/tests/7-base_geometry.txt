"""Import BaseGeometry class"""
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

"""Create new object"""
>>> bg = BaseGeometry()


"""Validate int"""
>>> bg.integer_validator("my_int", 12)


"""Validate width"""
>>> bg.integer_validator("width", 89)


"""try validating bad name value"""
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer


"""try validating bad age value"""
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0


"""try validating negative distances"""
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0



>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented


>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'



>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer



>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer



>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer



>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer



>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

